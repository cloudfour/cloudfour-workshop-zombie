# 2. Boot Camp

## Sigma Stronghold Web Site

You'll find the Sigma Stronghold web site landing page in `zombie-rucksack/sigma-stronghold-website/index.html`.

## Weapons

* [ySlow](http://developer.yahoo.com/yslow/)
* [W3C validator](http://validator.w3.org/)
* [Smush.it](http://smush.it)
* [SpriteMe](http://spriteme.org/)

## Using the W3C Validator

1. Go to the [W3C validator][w3cv].
2. You can either use the *Validate by File Upload* tab (and upload `index.html`) or you can use the *Validate by Direct Input* tab and copy-and-paste the source of the page (using the *View Source...* tool in your browser).

## Using ySlow

1. View the `index.html` file in your modern web browser (suggest either Chrome or Firefox for now).
2. Activate the ySlow plugin/extension. Usually this is done by clicking a little icon.
3. Click the *run test* button to start running tests.
4. To see how big the whole page is, check out the *Statistics* tab.
5. For individual details about each resource, try the *Components* tab.

## Exercise Step 1

### Fixing what's broken and getting rid of the weather

1. Find and fix the broken nested `<span>` elements in index.html. Use the [W3C validator][w3cv] as your guide.
2. Remove the entire weather widget (`div#weather`).
3. Revalidate/repeat until you see the green happy color.

## Exercise Step 2

### The missing bits

1. Reduce the Google fonts stylesheets to a single `<link>` tag.
    a. The two fonts actually being used on the page are *Nosifer* (drippy headlines) and *Special Elite* (body).
    b. Remove the `<link>` tags for fonts that aren't being used at all.
    c. Concatenate the remaining two fonts into a single `<link>` tag using this format:
    `<link href="http://fonts.googleapis.com/css?family=Cool+Font|Squiggly" rel="stylesheet">`
2. Remove the `<link>` tag that points to `home.css`.
3. Update the CSS rule for `h2`. Update the filename from `blip.jpg` to `blip.png`.
4. Add a favicon.
    a. Find `favicon.ico` in the `supplemental/boot-camp` folder inside of your rucksack.
    b. Copy that into the `sigma-stronghold-website` directory (at the top level of your rucksack).
    c. Add this code just after the Google fonts stylesheet `<link>`s: `<link rel="shortcut icon" href="favicon.ico" />`

[w3cv]: http://validator.w3.org/ "W3C Validator"

## Exercise Step 3

### Deflabbing some images

1. Remove the `zombie-girl` image and its containing `<div>` entirely (`div#nozombies`).
2. Replace the image for contact-HQ with the following HTML chunk:

        <h2>Contact HQ</h2>
        <p>Abandoned Post Office<br />
        23 Daryl Dixon Road<br />
        Manhattan Offset Zone<br />
        <a href="mailto:help@sigma-stronghold.com">help@sigma-stronghold.com</a><br />
        CB Channel 32.6</p>
        
3. Deflate the moon image using the smush.it tool.

    a. Go to [smush.it](http://smush.it)
    b. Use the *Uploader* tab.
    c. Upload the image `images/moon.jpg` (in your rucksack, in the `sigma-stronghold-website` directory).
    d. Replace `images/moon.jpg` with the smushed version.

## Exercise Step 4 (A bit more advanced): Apache configuration

### Warning: This will only work if you have an apache 2.x web server running and 

1. Create a new file in the sigma stronghold web site directory called `.htaccess`.
2. We suggest adding the configuration sections individually, save and test to minimize web-server-borkage likelihood.
3. Enable GZIP:

    
        <IfModule mod_deflate.c>
         SetOutputFilter DEFLATE
         # Donâ€™t compress
         SetEnvIfNoCase Request_URI \.(?:gif|jpe?g|png)$ no-gzip dont-vary
         SetEnvIfNoCase Request_URI \.(?:exe|t?gz|zip|bz2|sit|rar)$ no-gzip dont-vary
         #Dealing with proxy servers
         <IfModule mod_headers.c>
         Header append Vary User-Agent
         </IfModule>
        </IfModule>

4. Create far-future expires headers:

        <IfModule mod_expires.c>
        ExpiresActive On
        ExpiresByType text/html "access plus 1 seconds"
        ExpiresByType image/gif "access plus 2 years"
        ExpiresByType image/jpeg "access plus 2 years"
        ExpiresByType image/png "access plus 2 years"
        ExpiresByType text/css "access plus 2 years"
        ExpiresByType text/javascript "access plus 2 years"
        ExpiresByType application/x-javascript "access plus 2 years"
        ExpiresByType image/x-icon "access plus 2 years"
        </IfModule>

5. Turn off ETags:

        FileETag none
        
## Exercise Step 5

1. Most of this semantic work has been done for you (so much typing!). Find the cleaned up HTML and CSS in your rucksack, in `supplemental/boot-camp/semantic`.
2. Replace the `index.html` and `styles.css` files in your `sigma-stronghold-website` with these versions.
3. Minify the CSS.
    a. Go to the [Online YUI Compressor](http://www.refresh-sf.com/yui/).
    b. Paste the contents of the CSS file (make sure to use the updated/semantically-better version you just moved into the site's directory!) into the field.
    c. Make sure to set the *file type* drop-down to `CSS`.
    d. Don't worry about any other settings; click *COMPRESS*.
    e. Copy the resulting, compressed CSS into the `styles.css` file (overwriting what was there) and save.
    f. Be sure to test!
    
[More information about enabling GZIP on apache](http://www.techiepark.com/tutorials/how-to-enable-gzip-compression-in-apache-server-to-speed-up-website/)

# 3. Release the Hounds!

For more expounding on the topic of relinquishing control, see Lyza's presentation ["Crap, it doesn't look quite right: Or, How I learned to stop worrying and set my mobile web sites free"](http://www.slideshare.net/lyzadanger/crap-it-doesnt-look-quite-right-or-how-i-learned-to-stop-worrying-and-set-my-mobile-web-sites-free-9518337) on Slideshare.

## Notes on Fluid CSS and Responsive Web Design (RWD)

* See Ethan's ([@beep](http://twitter.com/beep)) original article about RWD on [A List Apart](http://www.alistapart.com/articles/responsive-web-design/)
* Fluid formula: `result = target / context`
* Rough rule of thumb for font sizes: `1em = 100% ~= 16px ~= 12pt`. *Approximately*.
* Percentages (%) and `em`s are both fluid units, `pt`s, `px`, inches and pica are fixed. (Technically, `px` are not *absolute* absolute, as the size of a pixel varies with different devices and screens and are not *fixed*, per se. However, for our purposes, they are effectively absolute, as they do not scale).

## Exercise 1: Going Fluid

1. Edit `styles.css` in the `sigma-stronghold-website` folder in your rucksack.
2. Set a `max-width` instead of a `width` on the two main containing elements, `body > div` and `#container`. Change the `padding` on `#container` to be in `em`s (relative) instead of `px` (absolute). You should end up with these two rules:

### Instead of

~~~
body > div {
  max-width: 920px;
  margin: 0 auto;
  border-color: rgba(255, 255, 255, 0.2);
  border-width: 0px 7px;
  border-style: solid; 
}
~~~

### Use

~~~
#container {
  zoom: 1;
  background: black;
  padding: .625em;
  max-width: 900px;
  clear: both;
}
~~~

### Instead of

    #main {
      zoom: 1;
      margin-left: 10px;
      clear: left;
      float: left;
      width: 550px;
      ...
    }

### use

    #main {
      zoom: 1;
      margin-left: 1.5%;
      clear: left;
      float: left;
      width: 60%;
      ...
    }

### Instead of

    #sidebar {
      margin-left: 570px; 
    }

### Use

    #sidebar {
      margin-left: 63.5%;
    }


# 4. A Honed Killing Machine

## ApplicationCache!

### More Information about ApplicationCache

* There are enough little gotchas in appCache that it may behoove you to [read the spec](http://www.whatwg.org/specs/web-apps/current-work/multipage/offline.html).
* A handy site that lists a lot of the common gotchas can be found at <http://appcachefacts.info/>.
* We find that it is easiest to inspect and debug appCache using's Webkit's Web Inspector tool (available in Chrome, Safari).

### Cache Manifest Quickies

1. File must be served as `text/application-cache`. Often this can be effected by adding the following line to an apache config (`.htaccess` file or the like).
    `AddType text/cache-manifest .appcache`

2. Basic cache manifest syntax:

        CACHE MANIFEST

        CACHE:
        foo.jpg
        bar.png
        index.html
        ding/dong.html

3. Reference a cache manifest with the `manifest` attribute of the `<html>` tag. e.g. `<html manifest="manifest.appcache">`.

### Creating a Cache Manifest for the Sigma Stronghold Site

*Note*: If you are not running apache locally, you may not be able to get cache manifests working on your laptop. No worries!

1. Create a file called `manifest.appcache` in the `sigma-stronghold-website` folder in your rucksack.
2. Let's start by adding the landing page (really all we have of the site!) and its resources to the application cache: CSS, images...etc:

        CACHE MANIFEST

        CACHE:

        index.html
        favicon.ico
        images/blip.png
        images/bomb.png
        images/moon.jpg
        styles.css
        http://fonts.googleapis.com/css?family=Nosifer|Special+Elite

3. Edit the `.htaccess` file in the `sigma-stronghold-website` directory (create `.htaccess` if it doesn't exist yet).
4. Add the line:

        `AddType text/cache-manifest .appcache`
        
5. Edit `index.html`. Change the `<html>` tag to read:

        `<html manifest="manifest.appcache">`
        
6. Use the WebInspector to see if your appCache worked!

### Improving the Cache Manifest

We need to cache those Google fonts! Add this to the end of the `CACHE` section:

    http://themes.googleusercontent.com/static/fonts/nosifer/v2/7n0ZFTD4V11-kkhjuR2UIwLUuEpTyoUstqEm5AMlJo4.woff
    http://themes.googleusercontent.com/static/fonts/specialelite/v3/9-wW4zu3WNoD5Fjka35Jm4kaQb-UsZVONjobs91YQtw.woff

# Device APIs: Focus on Geolocation!

## W3C Geolocation API

* The spec for the [W3C Geolocation API spec](http://dev.w3.org/geo/api/spec-source.html) is relatively short and easy to understand (as specs go).

### Quick Details

Browsers that implement the W3C geolocation spec expose the `navigator.geolocation` object and its methods to the browser.

#### Code Snippets

        navigator.geolocation.getCurrentPosition(successCallback, errorCallback)
        
        function successCallback(position) {
          // Latitude and Longitude are usually what you're after.
          // They're properties of the coords object on position.
          alert(position.coords.latitude + ', ' + position.coords.longitude);
        }
        function errorCallback(error) {
          // Do something or freak out.
        }

### Building a Quickie Geolocation Test Page

TODO: HTML template in `where-am-i` folder.

1. Open the `index.html` file in the `where-am-i` folder in your rucksack.
2. After the closing `</body>` tag, add:

        <script>
          if (navigator.geolocation) { // Test for W3C geolocation support
            
          }
        </script>
3. OK! Now expand upon that:

        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(onGeoSuccess, onGeoError);
        } else {
          onGeoError(new Error('Sorry, Geolocation not supported in this browser!'));
        }

4. *Note*: This won't work (well, there will be JS errors) until we define the `onGeoSuccess` and `onGeoError` callback functions. So let's do that now:
5. Add this to the JavaScript (right after what's already there):

        function onGeoSuccess(position) {
          var coordinates = position.coords;
          alert(coordinates.latitude + ", " + coordinates.longitude);
        }
        function onGeoError(error) {
          alert(error.message);
        }
        
6. Try it out!

TODO: Stuck? Find the script in...blah blah.

# 6. A Band of Brothers

* [jQuery Mobile](http://www.jquerymobile.com)


# 7. Desperate Times call for...

## Hybrid App Development with PhoneGap and PhoneGap Build

* [PhoneGap](http://www.phonegap.com)
* [PhoneGap Build](http://build.phonegap.com)

## Anatomy of a PhoneGap Build Config File

TODO: Put app icons in the exercise area for this and link into the config.xml
TODO: Put config.xml example in rucksack
